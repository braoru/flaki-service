// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/cloudtrust/flaki-service/pkg/health (interfaces: HealthChecker)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	health "github.com/cloudtrust/flaki-service/pkg/health"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// HealthChecker is a mock of HealthChecker interface
type HealthChecker struct {
	ctrl     *gomock.Controller
	recorder *HealthCheckerMockRecorder
}

// HealthCheckerMockRecorder is the mock recorder for HealthChecker
type HealthCheckerMockRecorder struct {
	mock *HealthChecker
}

// NewHealthChecker creates a new mock instance
func NewHealthChecker(ctrl *gomock.Controller) *HealthChecker {
	mock := &HealthChecker{ctrl: ctrl}
	mock.recorder = &HealthCheckerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *HealthChecker) EXPECT() *HealthCheckerMockRecorder {
	return m.recorder
}

// AllHealthChecks mocks base method
func (m *HealthChecker) AllHealthChecks(arg0 context.Context) map[string]string {
	ret := m.ctrl.Call(m, "AllHealthChecks", arg0)
	ret0, _ := ret[0].(map[string]string)
	return ret0
}

// AllHealthChecks indicates an expected call of AllHealthChecks
func (mr *HealthCheckerMockRecorder) AllHealthChecks(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AllHealthChecks", reflect.TypeOf((*HealthChecker)(nil).AllHealthChecks), arg0)
}

// InfluxHealthChecks mocks base method
func (m *HealthChecker) InfluxHealthChecks(arg0 context.Context) []health.Report {
	ret := m.ctrl.Call(m, "InfluxHealthChecks", arg0)
	ret0, _ := ret[0].([]health.Report)
	return ret0
}

// InfluxHealthChecks indicates an expected call of InfluxHealthChecks
func (mr *HealthCheckerMockRecorder) InfluxHealthChecks(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "InfluxHealthChecks", reflect.TypeOf((*HealthChecker)(nil).InfluxHealthChecks), arg0)
}

// JaegerHealthChecks mocks base method
func (m *HealthChecker) JaegerHealthChecks(arg0 context.Context) []health.Report {
	ret := m.ctrl.Call(m, "JaegerHealthChecks", arg0)
	ret0, _ := ret[0].([]health.Report)
	return ret0
}

// JaegerHealthChecks indicates an expected call of JaegerHealthChecks
func (mr *HealthCheckerMockRecorder) JaegerHealthChecks(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "JaegerHealthChecks", reflect.TypeOf((*HealthChecker)(nil).JaegerHealthChecks), arg0)
}

// RedisHealthChecks mocks base method
func (m *HealthChecker) RedisHealthChecks(arg0 context.Context) []health.Report {
	ret := m.ctrl.Call(m, "RedisHealthChecks", arg0)
	ret0, _ := ret[0].([]health.Report)
	return ret0
}

// RedisHealthChecks indicates an expected call of RedisHealthChecks
func (mr *HealthCheckerMockRecorder) RedisHealthChecks(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "RedisHealthChecks", reflect.TypeOf((*HealthChecker)(nil).RedisHealthChecks), arg0)
}

// SentryHealthChecks mocks base method
func (m *HealthChecker) SentryHealthChecks(arg0 context.Context) []health.Report {
	ret := m.ctrl.Call(m, "SentryHealthChecks", arg0)
	ret0, _ := ret[0].([]health.Report)
	return ret0
}

// SentryHealthChecks indicates an expected call of SentryHealthChecks
func (mr *HealthCheckerMockRecorder) SentryHealthChecks(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "SentryHealthChecks", reflect.TypeOf((*HealthChecker)(nil).SentryHealthChecks), arg0)
}
